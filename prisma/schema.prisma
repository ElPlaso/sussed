// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String   @id @default(cuid())
  ownerId     String
  title       String
  description String?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user          User           @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  susResponses  SusResponse[]
  collaborators Collaborator[]
}

model SusResponse {
  id            String  @id @default(cuid())
  projectId     String
  respondeeId   String?
  questionOne   Int
  questionTwo   Int
  questionThree Int
  questionFour  Int
  questionFive  Int
  questionSix   Int
  questionSeven Int
  questionEight Int
  questionNine  Int
  questionTen   Int

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  respondee User?   @relation(fields: [respondeeId], references: [id])
}

model Collaborator {
  userId    String
  projectId String
  canEdit   Boolean

  user    User    @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  @@id([userId, projectId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  displayName   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts       Account[]
  projects       Project[]
  susResponses   SusResponse[]
  collaborations Collaborator[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
